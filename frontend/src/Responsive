RESPONSIVE WEB PAGE:

1- Basic Setup with Viewport Meta Tag
First, ensure your public/index.html has the responsive viewport meta tag:
<meta name="viewport" content="width=device-width, initial-scale=1" />

2- CSS Approaches for Responsiveness
OPTION-A: Media Queries in <CSS>
    /* styles.css */
    .container {
      padding: 20px;
      background: #f0f0f0;
    }
    
    /* Mobile first approach (default styles are for mobile) */
    
    /* Tablet */
    @media (min-width: 768px) {
      .container {
        padding: 30px;
      }
    }
    
    /* Desktop */
    @media (min-width: 1024px) {
      .container {
        padding: 40px;
        max-width: 1200px;
        margin: 0 auto;
      }
    }
----------------------------------------------------



OPTION-B: CSS Flexbox and Grid
jsx-------------------------------------------------
import './styles.css';

function App() {
  return (
    <div className="flex-container">
      <div className="flex-item">Item 1</div>
      <div className="flex-item">Item 2</div>
      <div className="flex-item">Item 3</div>
    </div>
  );
}
----------------------------------------------------
css-------------------------------------------------
.flex-container {
    display: flex;
    flex-direction: column; /* Stack vertically on mobile */
    gap: 10px;
  }
  
  @media (min-width: 768px) {
    .flex-container {
      flex-direction: row; /* Side by side on larger screens */
    }
    
    .flex-item {
      flex: 1; /* Equal width */
    }
  }
  .grid-container {
    display: grid;
    grid-template-columns: 1fr; /* Single column on mobile */
    gap: 15px;
  }
  
  @media (min-width: 768px) {
    .grid-container {
      grid-template-columns: repeat(2, 1fr); /* 2 columns */
    }
  }
  
  @media (min-width: 1024px) {
    .grid-container {
      grid-template-columns: repeat(3, 1fr); /* 3 columns */
    }
  }
----------------------------------------------------



Option C: CSS-in-JS (Styled Components/Emotion)
jsx-------------------------------------------------
import styled from 'styled-components';

const Container = styled.div`
  padding: 20px;
  background: #f0f0f0;

  @media (min-width: 768px) {
    padding: 30px;
  }

  @media (min-width: 1024px) {
    padding: 40px;
    max-width: 1200px;
    margin: 0 auto;
  }
`;

function App() {
  return <Container>Your content</Container>;
}
----------------------------------------------------



4- Responsive Images
jsx-------------------------------------------------
function ResponsiveImage() {
    return (
      <img
        src="image.jpg"
        alt="Description"
        style={{
          width: '100%',
          height: 'auto',
          maxWidth: '800px' // Won't grow beyond this
        }}
      />
    );
  }
----------------------------------------------------
